package au.com.codeka.warworlds.server.handlers;

import java.sql.SQLException;
import java.sql.Statement;

import org.joda.time.DateTime;

import au.com.codeka.common.Log;
import au.com.codeka.common.protobuf.Messages;
import au.com.codeka.warworlds.server.RequestException;
import au.com.codeka.warworlds.server.RequestHandler;
import au.com.codeka.warworlds.server.data.DB;
import au.com.codeka.warworlds.server.data.SqlStmt;

public class DevicesHandler extends RequestHandler {
  private static final Log log = new Log("DevicesHandler");

  @Override
  protected void post() throws RequestException {
    Messages.DeviceRegistration registration = getRequestBody(Messages.DeviceRegistration.class);

    Long id;
    try (SqlStmt sql = DB.prepare(
        "SELECT id FROM devices WHERE device_id=? AND user_email=?")) {
      sql.setString(1, registration.getDeviceId());
      sql.setString(2, getSession().getEmail());
      id = sql.selectFirstValue(Long.class);
    } catch (RequestException e) {
      throw e;
    } catch (Exception e) {
      throw new RequestException(e);
    }

    String stmt;
    if (id == null) {
      stmt = "INSERT INTO devices" +
          " (device_id, user_email, device_model, device_manufacturer, device_build," +
          "  device_version)" +
          " VALUES (?, ?, ?, ?, ?, ?)";
    } else {
      stmt = "UPDATE devices SET" +
          "  device_id=?, user_email=?, device_model=?, device_manufacturer=?, device_build=?," +
          "  device_version=?" +
          " WHERE id=?";
    }

    try (SqlStmt sql = DB.prepare(stmt, Statement.RETURN_GENERATED_KEYS)) {
      sql.setString(1, registration.getDeviceId());
      sql.setString(2, getSession().getEmail());
      sql.setString(3, registration.getDeviceModel());
      sql.setString(4, registration.getDeviceManufacturer());
      sql.setString(5, registration.getDeviceBuild());
      sql.setString(6, registration.getDeviceVersion());
      if (id != null) {
        sql.setInt(7, (int) (long) id);
      }
      sql.update();
      if (id == null) {
        id = (long) sql.getAutoGeneratedID();
      }

      setResponseBody(Messages.DeviceRegistration.newBuilder()
          .setKey(id.toString())
          .build());
    } catch (Exception e) {
      throw new RequestException(e);
    }
  }

  @Override
  protected void put() throws RequestException {
    String strid = getUrlParameter("id");
    if (strid == null || strid.isEmpty()) {
      throw new RequestException(400);
    }
    int id = Integer.parseInt(strid);

    String onlineStatusParameterValue = getRequest().getParameter("online_status");
    if (onlineStatusParameterValue != null && onlineStatusParameterValue.equals("1")) {
      Messages.DeviceOnlineStatus device_online_status_pb =
          getRequestBody(Messages.DeviceOnlineStatus.class);

      String sql = "UPDATE devices SET online_since=? WHERE id=? AND user_email=?";
      try (SqlStmt stmt = DB.prepare(sql)) {
        if (device_online_status_pb.getIsOnline()) {
          stmt.setDateTime(1, DateTime.now());
        } else {
          stmt.setNull(1);
        }
        stmt.setInt(2, id);
        stmt.setString(3, getSession().getEmail());
        stmt.update();
      } catch (Exception e) {
        throw new RequestException(e);
      }
    } else {
      Messages.DeviceRegistration device_registration_pb =
          getRequestBody(Messages.DeviceRegistration.class);
      log.info("Updating FCM token: %s id=%d email=%s", device_registration_pb.getFcmToken(), id, getSession().getEmail());

      String sql = "UPDATE devices SET fcm_token=? WHERE id=? AND user_email=?";
      try (SqlStmt stmt = DB.prepare(sql)) {
        stmt.setString(1, device_registration_pb.getFcmToken());
        stmt.setInt(2, id);
        stmt.setString(3, getSession().getEmail());
        stmt.update();
      } catch (SQLException e) {
        throw new RequestException(e);
      }
    }
  }

  @Override
  protected void delete() throws RequestException {
    int id = Integer.parseInt(getUrlParameter("id"));

    try (SqlStmt sql = DB.prepare("DELETE FROM devices WHERE id=? and user_email=?")) {
      sql.setInt(1, id);
      sql.setString(2, getSession().getEmail());
      sql.update();
    } catch (Exception e) {
      throw new RequestException(e);
    }
  }
}
