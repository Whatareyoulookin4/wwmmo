buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.ajoberstar.grgit:grgit-core:3.1.1'
  }
}

import java.text.SimpleDateFormat
import org.ajoberstar.grgit.Grgit

apply plugin: 'java'
apply plugin: 'application'

dependencies {
  implementation fileTree(dir: 'libs', include: '*.jar')
  implementation 'au.com.codeka:carrot:2.4.4'
  implementation 'com.google.firebase:firebase-admin:7.0.1'
  implementation 'com.google.auth:google-auth-library-oauth2-http:0.20.0'
  implementation 'com.google.oauth-client:google-oauth-client:1.30.6'
  implementation 'com.google.api-client:google-api-client:1.30.9'
  implementation 'com.google.api-client:google-api-client-gson:1.30.9'
  implementation 'com.google.apis:google-api-services-oauth2:v2-rev157-1.25.0'
  implementation 'com.google.http-client:google-http-client:1.34.2'
  implementation 'com.google.http-client:google-http-client-gson:1.34.2'
  implementation 'com.google.code.gson:gson:2.8.6'
  implementation 'com.google.protobuf:protobuf-java:3.10.0'
  implementation 'com.google.protobuf:protobuf-java-util:3.10.0'
  implementation 'com.google.guava:guava:24.1-jre'
  implementation 'com.squareup.okhttp3:okhttp:4.6.0'
  implementation 'com.zaxxer:HikariCP:3.4.2'
  implementation 'joda-time:joda-time:2.9.9'
  implementation 'io.dropwizard.metrics:metrics-core:4.1.2'
  implementation 'io.dropwizard.metrics:metrics-jetty9:4.1.2'
  implementation 'org.eclipse.jetty:jetty-server:9.4.27.v20200227'
  implementation 'org.eclipse.jetty:jetty-continuation:9.4.27.v20200227'
  implementation 'org.eclipse.jetty:jetty-webapp:9.4.27.v20200227'
  implementation 'org.postgresql:postgresql:42.2.10'
  implementation 'org.reflections:reflections:0.9.11'
  implementation project(':common')
}

sourceSets {
  main {
    java {
      srcDir 'src'
    }
  }
}

mainClassName = "au.com.codeka.warworlds.server.Runner"

ext.buildDate = null
compileJava.doLast {
  buildDate = new Date()
  jar.manifest {
    attributes(
        'Implementation-Version': '1.0.' + getVersionCodeFromGit() + '-' + new SimpleDateFormat("yyyyMMdd").format(project.buildDate)
    )
  }
}
tasks.jar.onlyIf { return project.buildDate != null}

applicationDistribution.from("data/") {
  into "data"
}
applicationDistribution.from("scripts/") {
  into ""
}

def getVersionCodeFromGit() {
  // Same as running:
  // git rev-list <checked out branch name> | wc -l
  return Grgit.open(dir: project.buildscript.sourceFile.parentFile.parent).log().size()
}