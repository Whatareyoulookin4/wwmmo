syntax = "proto2";

package au.com.codeka.warworlds.common.proto;

// https://github.com/square/wire/issues/1325 We need to swap these when switching between Win/Linux
import "au\\com\\codeka\\warworlds\\common\\proto\\common.proto";
import "au\\com\\codeka\\warworlds\\common\\proto\\design.proto";

// A SituationReport is generated every time something "interesting" happens in your empire: a fleet
// move is completed, a build is completed, a colony is attacked and so on.
message SituationReport {
  // The ID of the empire this report is for.
  required int64 empire_id = 2;

  // The time, in milliseconds from Unix epoch, this report was generated.
  required int64 report_time = 3;

  // The ID of the start this report was generated for.
  required int64 star_id = 4;

  // The index of the planet this report was generated, if applicable.
  optional int32 planet_index = 5;

  // This record is used when a building has finished being built.
  message BuildCompleteRecord {
    // The design type of the design that was just built.
    required Design.DesignType design_type = 1;

    // The number of things that were built. Always 1 for a building
    required int32 count = 2;

    // True if this was an upgrade of a building, false if it's a brand new building.
    required bool upgrade = 3;
  }
  optional BuildCompleteRecord build_complete_record = 6;

  // This record is used when a fleet has completed a move to a star.
  message MoveCompleteRecord {
    // The ID of the fleet that completed the move.
    required int64 fleet_id = 1;

    // The design type of the fleet that was moved.
    required Design.DesignType design_type = 3;

    // The number of ships in this fleet, before any combat may have reduced them.
    required float num_ships = 4;

    // The amount of fuel the fleet has left now that it's finished it's move.
    required float fuel_amount = 5;

    // If true, this fleet was destroyed in the ensuing combat.
    required bool was_destroyed = 6;
  }
  optional MoveCompleteRecord move_complete_record = 7;

  // A record that's added when one or more of your fleets have been destroyed, or when they have
  // destroyed another empire's fleet.
  message FleetRecord {
    required Design.DesignType design_type = 1;
    required float num_ships = 2;
  }

  // There can be more than one of these if multiple fleets are destroyed/victorious. We don't keep
  // track of individual fleets or anything, there will always be at most one per design, with the
  // total number of all fleets combined.
  repeated FleetRecord fleet_destroyed_record = 8;
  repeated FleetRecord fleet_victorious_record = 9;

  message ColonyDestroyedRecord {
    required int64 colony_id = 1;
    required int64 enemy_empire_id = 2;
  }
  optional ColonyDestroyedRecord colony_destroyed_record = 10;

  message ColonyAttackedRecord {
    required int64 colony_id = 1;
    required int64 enemy_empire_id = 2;
    required float num_ships = 3;
  }
  optional ColonyAttackedRecord colony_attacked_record = 11;

  message StarRunOutOfGoodsRecord {
    required int64 colony_id = 1;
  }
  optional StarRunOutOfGoodsRecord star_ran_out_of_goods_record = 12;
}